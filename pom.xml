<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.terra</groupId>
  <artifactId>planet</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <scm>
    <url>https://github.com/tecris/continuous-delivery.git</url>
    <connection>scm:git:git://github.com/tecris/continuous-delivery.git</connection>
    <developerConnection>scm:git:git@github.com:tecris/continuous-delivery.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <repository>
      <id>deployment</id>
      <name>Internal Releases</name>
      <url>http://maven-nexus.repository:8081/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
      <id>deployment</id>
      <name>Internal Releases</name>
      <url>http://maven-nexus.repository:8081/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <database.vendor>mysql</database.vendor>
    <mysql.root.password>mysql</mysql.root.password>
    <database.host>localhost</database.host>
    <database.port>3306</database.port>
    <database.name>planetsdb</database.name>
    <database.username>planets</database.username>
    <database.password>1planets!</database.password>
    <db.driver>com.mysql.jdbc.Driver</db.driver>
    <wildfly.username>admin</wildfly.username>
    <wildfly.password>1admin!</wildfly.password>
    <jayway-restassured.version>2.7.0</jayway-restassured.version>
    <datasource.name>MySqlDS</datasource.name>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.spec</groupId>
        <artifactId>jboss-javaee-7.0</artifactId>
        <version>1.0.3.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>jsr250-api</artifactId>
        <version>1.0</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.38</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1206-jdbc42</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.7.0-rc2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${jayway-restassured.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>planet</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jolokia</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.13.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <executions>
            <execution>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <doCheck>true</doCheck>
            <doUpdate>true</doUpdate>
            <shortRevisionLength>12</shortRevisionLength>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-maven-plugin</artifactId>
          <version>3.2.1</version>
          <configuration>
            <driver>${db.driver}</driver>
            <url>jdbc:${database.vendor}://${database.host}:${database.port}/${database.name}</url>
            <user>${database.username}</user>
            <password>${database.password}</password>
          </configuration>
          <executions>
            <execution>
              <id>compile</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>migrate</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>1.1.0.Alpha5</version>
          <configuration>
            <port>9990</port>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.17</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>cd-postgres</id>
       <properties>
         <datasource.name>PostgresDS</datasource.name>
         <database.vendor>postgresql</database.vendor>
         <database.port>5432</database.port>
         <db.driver>org.postgresql.Driver</db.driver>
       </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jolokia</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <logDate>default</logDate>
              <verbose>true</verbose>
              <images>
                <image>
                  <alias>planets-db</alias>
                  <name>casa.docker/postgres:9.4</name>
                  <run>
                    <namingStrategy>alias</namingStrategy>
                    <env>
                      <POSTGRES_DB>${database.name}</POSTGRES_DB>
                      <POSTGRES_USER>${database.username}</POSTGRES_USER>
                      <POSTGRES_PASSWORD>${database.password}</POSTGRES_PASSWORD>
                    </env>
                    <ports>
                      <port>${database.port}:${database.port}</port>
                    </ports>
                    <wait>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <alias>planets-web</alias>
                  <name>casa.docker/planets:${buildNumber}</name>
                  <build>
                    <from>casa.docker/wildfly-postgres:9.0.2</from>
                    <assembly>
                      <basedir>/opt/jboss/wildfly/standalone/deployments</basedir>
                      <descriptor>assembly.xml</descriptor>
                    </assembly>
                  </build>
                  <run>
                    <namingStrategy>alias</namingStrategy>
                    <ports>
                      <port>8080:8080</port>
                      <port>9990:9990</port>
                    </ports>
                    <links>
                      <link>planets-db</link>
                    </links>
                    <cmd>-Dpostgres.ipaddress=planets-db -Dpostgres.port=${database.port} -Dpostgres.database=${database.name} -Dpostgres.username=${database.username} -Dpostgres.password=${database.password}</cmd>
                    <wait>
                      <!-- Check for this URL to return a 200 return code ....  -->
                      <url>http://localhost:8080/planet</url>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <!-- Hooking into the lifecycle -->
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>build</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cd-mysql</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jolokia</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <logDate>default</logDate>
              <verbose>true</verbose>
              <images>
                <image>
                  <alias>planets-db</alias>
                  <name>casa.docker/mysql:5.7</name>
                  <run>
                    <namingStrategy>alias</namingStrategy>
                    <env>
                      <MYSQL_ROOT_PASSWORD>${mysql.root.password}</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>${database.name}</MYSQL_DATABASE>
                      <MYSQL_USER>${database.username}</MYSQL_USER>
                      <MYSQL_PASSWORD>${database.password}</MYSQL_PASSWORD>
                    </env>
                    <ports>
                      <port>3306:3306</port>
                    </ports>
                    <wait>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <alias>planets-web</alias>
                  <name>casa.docker/planets</name>
                  <build>
                    <from>casa.docker/wildfly-mysql:9.0.2</from>
                    <tags>
                      <tag>${buildNumber}</tag>
                    </tags>
                    <assembly>
                      <basedir>/opt/jboss/wildfly/standalone/deployments</basedir>
                      <descriptor>assembly.xml</descriptor>
                    </assembly>
                  </build>
                  <run>
                    <namingStrategy>alias</namingStrategy>
                    <ports>
                      <port>8080:8080</port>
                      <port>9990:9990</port>
                    </ports>
                    <links>
                      <link>planets-db</link>
                    </links>
                    <cmd>-Dmysql.ipaddress=planets-db -Dmysql.port=3306 -Dmysql.database=${database.name} -Dmysql.username=${database.username} -Dmysql.password=${database.password}</cmd>
                    <wait>
                      <!-- Check for this URL to return a 200 return code .... -->
                      <url>http://localhost:8080/planet</url>
                      <time>10000</time>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <!-- Hooking into the lifecycle -->
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>build</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>db-postgres</id>
      <properties>
        <database.vendor>postgresql</database.vendor>
        <database.port>5432</database.port>
        <db.driver>org.postgresql.Driver</db.driver>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>db-mysql</id>
      <properties>
        <database.vendor>mysql</database.vendor>
        <database.port>3306</database.port>
        <db.driver>com.mysql.jdbc.Driver</db.driver>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>run-it</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
