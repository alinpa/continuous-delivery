package org.terra.bs.entities;

// Generated Apr 23, 2014 8:29:01 PM by Hibernate Tools 3.4.0.CR1

import java.util.Calendar;
import java.util.Collection;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;

import org.terra.bs.util.Util;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "BOOK", uniqueConstraints = @UniqueConstraint(columnNames = "ISBN_NO") )
@XmlRootElement
public class Book implements java.io.Serializable {

    private int bookId;
    private String isbnNo;
    private Collection<Author> author;
    private Set<Genre> genre;
    private String shortDesc;
    private Publisher publisher;
    private double price;
    private Calendar publishedDate;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "BOOK_ID", unique = true, nullable = false)
    public int getBookId() {
        return this.bookId;
    }

    public void setBookId(int bookId) {
        this.bookId = bookId;
    }

    @Column(name = "ISBN_NO", unique = true, nullable = false, length = 15)
    public String getIsbnNo() {
        return this.isbnNo;
    }

    public void setIsbnNo(String isbnNo) {
        this.isbnNo = isbnNo;
    }

    @ManyToMany
    @JoinTable(name = "BOOK_AUTHOR", joinColumns = @JoinColumn(name = "BOOK_ID") , inverseJoinColumns = @JoinColumn(name = "AUTHOR_ID") )
    public Collection<Author> getAuthor() {
        return this.author;
    }

    public void setAuthor(Collection<Author> author) {
        this.author = author;
    }

    @ManyToMany
    @JoinTable(name = "BOOK_GENRE", joinColumns = @JoinColumn(name = "BOOK_ID") , inverseJoinColumns = @JoinColumn(name = "GENRE_ID") )
    public Set<Genre> getGenre() {
        return this.genre;
    }

    public void setGenre(Set<Genre> genre) {
        this.genre = genre;
    }

    @Column(name = "SHORT_DESC", nullable = false, length = 100)
    public String getShortDesc() {
        return this.shortDesc;
    }

    public void setShortDesc(String shortDesc) {
        this.shortDesc = shortDesc;
    }

    @OneToOne
    @JoinColumn(name = "PUBLISHER_ID", nullable = false)
    public Publisher getPublisher() {
        return this.publisher;
    }

    public void setPublisher(Publisher publisher) {
        this.publisher = publisher;
    }

    @Column(name = "PRICE", nullable = false, precision = 22, scale = 0)
    public double getPrice() {
        return this.price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "PUBLISHED_DATE", length = 10)
    public Calendar getPublishedDate() {
        return this.publishedDate;
    }

    public void setPublishedDate(Calendar publishedDate) {
        this.publishedDate = publishedDate;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((author == null) ? 0 : author.hashCode());
        result = prime * result + bookId;
        result = prime * result + ((genre == null) ? 0 : genre.hashCode());
        result = prime * result + ((isbnNo == null) ? 0 : isbnNo.hashCode());
        long temp;
        temp = Double.doubleToLongBits(price);
        result = prime * result + (int) (temp ^ (temp >>> 32));
        result = prime * result + ((publishedDate == null) ? 0 : publishedDate.hashCode());
        result = prime * result + publisher.hashCode();
        result = prime * result + ((shortDesc == null) ? 0 : shortDesc.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Book other = (Book) obj;
        if (author == null) {
            if (other.author != null)
                return false;
        } else if (!Util.collectionsEqual(this.author, other.author))
            return false;
        if (bookId != other.bookId)
            return false;
        if (genre == null) {
            if (other.genre != null)
                return false;
        } else if (!genre.equals(other.genre))
            return false;
        if (isbnNo == null) {
            if (other.isbnNo != null)
                return false;
        } else if (!isbnNo.equals(other.isbnNo))
            return false;
        if (Double.doubleToLongBits(price) != Double.doubleToLongBits(other.price))
            return false;
        if (publishedDate == null) {
            if (other.publishedDate != null)
                return false;
        } else if (!sameDate(publishedDate, other.publishedDate))
            return false;
        if (publisher == null) {
            if (other.publisher == null)
                return false;
        } else if (!publisher.equals(other.publisher))
            return false;
        if (shortDesc == null) {
            if (other.shortDesc != null)
                return false;
        } else if (!shortDesc.equals(other.shortDesc))
            return false;
        return true;
    }

    /*
     * Only interested in the date part of the calendar
     */
    private boolean sameDate(Calendar calOne, Calendar calTwo) {
        return calOne.get(Calendar.YEAR) == calTwo.get(Calendar.YEAR)
                && calOne.get(Calendar.MONTH) == calTwo.get(Calendar.MONTH)
                && calOne.get(Calendar.DAY_OF_MONTH) == calTwo.get(Calendar.DAY_OF_MONTH);
    }

    @Override
    public String toString() {
        return "Book [bookId=" + bookId + ", isbnNo=" + isbnNo + ", author=" + author + ", genre=" + genre
                + ", shortDesc=" + shortDesc + ", publisher=" + publisher + ", price=" + price + ", publishedDate="
                + publishedDate + "]";
    }

}
